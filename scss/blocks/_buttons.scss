/**
* Variables used in this file from abstracts/_variable.scss
*
get_color(primary)
get_color(secondary)
get_color(featured)
get_color(danger)
get_color(dark)
get_color(gray)
$text_color_primary
$text_color_secondary
$text_color_featured
$text_color_danger

*
*/
/**
* Specific variables (used only in this file)
*
* None
*
**/
button,
.button {
	cursor: pointer;
	display: inline-block;
	margin-bottom: 0;
	margin-right: 4px;
	font-weight: normal;
	text-align: center;
	vertical-align: middle;
	touch-action: manipulation;
	background-image: none;
	border: 1px solid transparent;
	white-space: nowrap;
	font-size: 1rem;
	padding: $component_margin $component_margin*2;
	user-select: none;
	background: #fff;
	color: get_color( 'dark' );
	border: 1px solid #fff;
	box-shadow: none;
	transition: get_transition( 'ease-in-out-quad' );
	border-radius: 200px;
	font-weight: 200;

	&:hover,
	&:focus {
		background: rgba(255, 255, 255, 0.8);
		border: 1px solid rgba(255, 255, 255, 0.8);
		color: get_color(dark);
	}

	&:active {
		background: rgba(255, 255, 255, 0.6);
		border: 1px solid rgba(255, 255, 255, 0.6);
		color: get_color(dark);
	}

	&:last-child {
		margin-right: 0px;
	}
}

.button {
	text-transform: capitalize;
	span {
		display: inline-block;
		margin-right: 6px;

		&:last-child {
		margin-right: 0px;
		}
	}

	&__icon {
		margin-right: 6px;
		width: 16px;
		height: 16px;
		vertical-align: text-top;

		&:last-child {
			margin-right: 0px;
		}
	}

	&--bordered {
		border-color: rgba(get_color(dark), 0.4);

		&:focus {
			border-color: rgba(get_color(dark), 0.4);
		}

		&:hover {
			border-color: rgba(get_color(dark), 0.6);
			background: transparent;
			color: get_color(dark);
		}

		&:active{
			border-color: get_color(dark);
		}
	}

	&--primary {
		background-color: get_color(primary);
		border-color: get_color(primary);
		color: #fff;
		border-radius: 200px;

		&:hover,
		&:focus {
			background: rgba(11, 11, 11, 0.6);
			border: 1px solid rgba(11, 11, 11, 0.6);
			color: #fff;
		}

		&:active {
			background: rgba(11, 11, 11, 1);
			border: 1px solid rgba(11, 11, 11, 1);
			border: 1px solid rgba(11, 11, 11, 1);
		}
	}

	&--small {
		padding: $component_margin/2 24px;
		font-size: 14px;
		min-width: 80px;
		text-align: center;
	}

	&--large {
		padding: 26px 48px;
		font-size:18px;
		line-height: 28px;

		@include breakpoint($to: desktop) {
			font-size: 16px;
			line-height: 24px;
			padding: $component_margin $component_margin*2
		}
	}

	&--border {
		border: 1px solid rgba(0, 0, 0, 0.24);
		padding: 23px 32px;
		font-size: 16px;
		line-height: 24px;

		&:hover,
		&:active {
			color: get_color(secondary);
			border: 1px solid get_color(secondary);

			svg {
				transition: get_transition( 'ease-in-out-quad' );
				fill: get_color(secondary);
			}
		}

		@include breakpoint($to: desktop) {
			font-size: 14px;
			line-height: 22px;
			padding: $component_margin $component_margin*2
		}
	}

	&--smaller {
		padding: 10px 24px;
		line-height: 20px;
		min-width: 80px;
		font-size: 14px;
		text-align: center;
	}

	&--submit {
		color: white;
		border-radius: 200px;
		background-color: get_color(dark);
		font-size: 14px;
		line-height: 20px;
		padding: 10px;

		&:focus {
			outline: none;
		}

		&:hover {
			color: white;
			background-color: get_color(secondary);
		}
	}
}

button:disabled,
.button--disabled {
	opacity: 0.7;
	pointer-events: none;
	box-shadow: none;

	&:hover {
		color: inherit;
		background-color: inherit;
	}
}
